test_check("MSDCProjectS")
path <- "vignettes/data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- read.table(file = path, sep = '\t', header = TRUE)
test_that("check plot format", {
path <- "vignettes/data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- read.table(file = path, sep = '\t', header = TRUE)
table <-eq_clean_data(table_original)
table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
Country %in% c("CHINA","JAPAN"))
table_example <- dplyr::select(table_example,Date,Country,Mag,Deaths,Location.Name)
## -----------------------------------------------------------------------------
g<-ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("gg", class(g)[1])
expect_equal("ggplot", class(g)[2])
})
path <- "vignettes/data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- read.table(file = path, sep = '\t', header = TRUE)
table <-eq_clean_data(table_original)
table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
Country %in% c("CHINA","JAPAN"))
table_example <- dplyr::select(table_example,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
geom_timeline(ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths)) +
ggplot2::layer(geom = GeomTimelineLabel,
mapping = ggplot2::aes(x = Date,
label = Location.Name,
y = Country,
mag = Mag,
color = Deaths),
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("gg", class(g)[1])
expect_equal("ggplot", class(g)[2])
test_that("check plot format", {
path <- "vignettes/data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- read.table(file = path, sep = '\t', header = TRUE)
table <-eq_clean_data(table_original)
table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
Country %in% c("CHINA","JAPAN"))
table_example <- dplyr::select(table_example,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
geom_timeline(ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths)) +
ggplot2::layer(geom = GeomTimelineLabel,
mapping = ggplot2::aes(x = Date,
label = Location.Name,
y = Country,
mag = Mag,
color = Deaths),
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("gg", class(g)[1])
expect_equal("ggplot", class(g)[2])
})
library(MSDCProjectS)
library(MSDCProjectS)
library(MSDCProjectS)
test_that("check date format", {
path <- "data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
table <-eq_clean_data(table_original)
table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
Country %in% c("CHINA","JAPAN"))
table_example <- dplyr::select(table,Date,Country,Mag,Deaths,Location.Name)
## -----------------------------------------------------------------------------
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table$Date[1]))
})
test_that("check date format", {
path <- "data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
table <-eq_clean_data(table_original)
table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
Country %in% c("CHINA","JAPAN"))
table_example <- dplyr::select(table,Date,Country,Mag,Deaths,Location.Name)
## -----------------------------------------------------------------------------
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table$Date[1]))
})
path <- "data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
getwd()
path <- "/tests/testthat/data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
path <- "tests/testthat/data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
test_that("check date format", {
path <- "tests/testthat/data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
table <-eq_clean_data(table_original)
table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
Country %in% c("CHINA","JAPAN"))
table_example <- dplyr::select(table,Date,Country,Mag,Deaths,Location.Name)
## -----------------------------------------------------------------------------
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table$Date[1]))
})
test_that("check date format", {
path <- "tests/testthat/data/earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
table <-eq_clean_data(table_original)
table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
Country %in% c("CHINA","JAPAN"))
table_example <- dplyr::select(table,Date,Country,Mag,Deaths,Location.Name)
## -----------------------------------------------------------------------------
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table$Date[1]))
})
library(MSDCProjectS)
getwd()
setwd(here())
library(here)
install.packages("here")
library(here)
setwd(here())
getwd()
setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
getwd()
path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
test_that("check date format", {
setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
})
class(table_original)
test_that("data.frame", class(table_original))
test_that("check date format", {
setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
test_that("data.frame", class(table_original))
})
setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
test_that("data.frame", class(table_original))
test_that("check date format", {
setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
expect_equal("data.frame", class(table_original))
})
library(MSDCProjectS)
library(MSDCProjectS)
path <- system.file("vignettes/data","earthquakes-2021-05-02_07-20-17_-0400.tsv", package = "MSDCProjectS" )
path
path
path <- system.file("vignettes/data","earthquakes-2021-05-02_07-20-17_-0400.tsv", package = "MSDCProjectS" )
path
path <- system.file("vignettes/data","earthquakes-2021-05-02_07-20-17_-0400.tsv", package = "MSDCProjectS" )
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
system.file()
system.file("vignettes/data","earthquakes-2021-05-02_07-20-17_-0400.tsv", package = "MSDCProjectS" )
path <- system.file("vignettes/data/earthquakes-2021-05-02_07-20-17_-0400.tsv", package = "MSDCProjectS" )
path
path <- system.file("vignettes/data","earthquakes-2021-05-02_07-20-17_-0400.tsv", package = "MSDCProjectS")
path
path <- system.file(package = "MSDCProjectS")
path
path <- system.file("vignettes/data", package = "MSDCProjectS")
path
path <- system.file("vignettes", package = "MSDCProjectS")
path
path <- system.file(package = "MSDCProjectS")
path
paste0(path,"\vignettes\Data\earthquakes-2021-05-02_07-20-17_-0400.tsv")
path
paste0(path,"/vignettes/Data/earthquakes-2021-05-02_07-20-17_-0400.tsv")
table_original <- utils::read.table(file = paste0(path,"/vignettes/Data/earthquakes-2021-05-02_07-20-17_-0400.tsv"),
sep = '\t', header = TRUE)
path
path <- system.file(package = "MSDCProjectS")
table_original <- utils::read.table(file = paste0(path,"/help/Data/earthquakes-2021-05-02_07-20-17_-0400.tsv"),
sep = '\t', header = TRUE)
tail(table_original)
path <- system.file("help/Data", "earthquakes-2021-05-02_07-20-17_-0400.tsv", package = "MSDCProjectS")
path
path <- system.file("help/Data", "earthquakes-2021-05-02_07-20-17_-0400.tsv", package = "MSDCProjectS")
table_original <- utils::read.table(file = path,sep = '\t', header = TRUE)
table <-eq_clean_data(table_original)
table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
Country %in% c("CHINA","JAPAN"))
test_that("check date format", {
#setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
#path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
path <- system.file("help/Data", "earthquakes-2021-05-02_07-20-17_-0400.tsv", package = "MSDCProjectS")
table_original <- utils::read.table(file = path,sep = '\t', header = TRUE)
table <-eq_clean_data(table_original)
table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
Country %in% c("CHINA","JAPAN"))
table_example <- dplyr::select(table,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table$Date[1]))
})
library(MSDCProjectS)
library(MSDCProjectS)
devtools::check_win_devel()
setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path, sep = '\t', header = TRUE)
table <-eq_clean_data(table_original)
table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
Country %in% c("CHINA","JAPAN"))
table_example <- dplyr::select(table_example,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
geom_timeline(ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths))
library(MSDCProjectS)
devtools::check_win_devel()
setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path,sep = '\t', header = TRUE)
colnames(table_original)
table_original <- data.frame(Country = c("Peru", "Mexico", "CUBA", "SRI LANKA", "Spain", "US","US"),
Location.Name = c("Lima", "DF", "Habana", "Island", "Madrid","Maine","Los Angeles"),
Date=c("1950-01-01","2000-01-01","2000-01-01","2000-01-01","1999-01-04","1966-06-02","1950-05-01"),
Latitude = c(31.1,38,35.683,34.1,36.4,31.5,35.5),
Longitude = c(35.5,58.2,35.8,43.2,25.4,35.3,25.5),
Deaths = c(7,1,2,8,33,20,3),
Mag=c(7,7,6,5,6,6,7),
stringsAsFactors = F)
View(table_original)
table_example <- dplyr::select(table_original,Date,Country,Mag,Deaths,Location.Name)
View(table_example)
table_original <- data.frame(Country = c("Peru", "Mexico", "CUBA", "SRI LANKA", "Spain", "US","US"),
Location.Name = c("Lima", "DF", "Habana", "Island", "Madrid","Maine","Los Angeles"),
Date=c("1950-01-01","2000-01-01","2000-01-01","2000-01-01","1999-01-04","1966-06-02","1950-05-01"),
Latitude = c(31.1,38,35.683,34.1,36.4,31.5,35.5),
Longitude = c(35.5,58.2,35.8,43.2,25.4,35.3,25.5),
Deaths = c(7,1,2,8,33,20,3),
Mag=c(7,7,6,5,6,6,7),
stringsAsFactors = F)
table_example <- dplyr::select(table_original,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table$Date[1]))
test_that("check date format", {
setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
table_original <- utils::read.table(file = path,sep = '\t', header = TRUE)
#table <-eq_clean_data(table_original)
#table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
#                               Country %in% c("CHINA","JAPAN"))
#table_example <- dplyr::select(table,Date,Country,Mag,Deaths,Location.Name)
table_original <- data.frame(Country = c("Peru", "Mexico", "CUBA", "SRI LANKA", "Spain", "US","US"),
Location.Name = c("Lima", "DF", "Habana", "Island", "Madrid","Maine","Los Angeles"),
Date=c("1950-01-01","2000-01-01","2000-01-01","2000-01-01","1999-01-04","1966-06-02","1950-05-01"),
Latitude = c(31.1,38,35.683,34.1,36.4,31.5,35.5),
Longitude = c(35.5,58.2,35.8,43.2,25.4,35.3,25.5),
Deaths = c(7,1,2,8,33,20,3),
Mag=c(7,7,6,5,6,6,7),
stringsAsFactors = F)
table_example <- dplyr::select(table_original,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table$Date[1]))
})
library(MSDCProjectS)
test_that("check date format", {
#setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
#path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
#table_original <- utils::read.table(file = path,sep = '\t', header = TRUE)
#table <-eq_clean_data(table_original)
#table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
#                               Country %in% c("CHINA","JAPAN"))
#table_example <- dplyr::select(table,Date,Country,Mag,Deaths,Location.Name)
table_original <- data.frame(Country = c("Peru", "Mexico", "CUBA", "SRI LANKA", "Spain", "US","US"),
Location.Name = c("Lima", "DF", "Habana", "Island", "Madrid","Maine","Los Angeles"),
Date=c("1950-01-01","2000-01-01","2000-01-01","2000-01-01","1999-01-04","1966-06-02","1950-05-01"),
Latitude = c(31.1,38,35.683,34.1,36.4,31.5,35.5),
Longitude = c(35.5,58.2,35.8,43.2,25.4,35.3,25.5),
Deaths = c(7,1,2,8,33,20,3),
Mag=c(7,7,6,5,6,6,7),
stringsAsFactors = F)
table_example <- dplyr::select(table_original,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table$Date[1]))
})
devtools::check_win_devel()
test_that("check date format", {
#setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
#path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
#table_original <- utils::read.table(file = path,sep = '\t', header = TRUE)
#table <-eq_clean_data(table_original)
#table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
#                               Country %in% c("CHINA","JAPAN"))
#table_example <- dplyr::select(table,Date,Country,Mag,Deaths,Location.Name)
table_original <- data.frame(Country = c("Peru", "Mexico", "CUBA", "SRI LANKA", "Spain", "US","US"),
Location.Name = c("Lima", "DF", "Habana", "Island", "Madrid","Maine","Los Angeles"),
Date=c("1950-01-01","2000-01-01","2000-01-01","2000-01-01","1999-01-04","1966-06-02","1950-05-01"),
Latitude = c(31.1,38,35.683,34.1,36.4,31.5,35.5),
Longitude = c(35.5,58.2,35.8,43.2,25.4,35.3,25.5),
Deaths = c(7,1,2,8,33,20,3),
Mag=c(7,7,6,5,6,6,7),
stringsAsFactors = F)
table_example <- dplyr::select(table_original,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table$Date[1]))
})
library(MSDCProjectS)
test_that("check date format", {
#setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
#path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
#table_original <- utils::read.table(file = path,sep = '\t', header = TRUE)
#table <-eq_clean_data(table_original)
#table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
#                               Country %in% c("CHINA","JAPAN"))
#table_example <- dplyr::select(table,Date,Country,Mag,Deaths,Location.Name)
table_original <- data.frame(Country = c("Peru", "Mexico", "CUBA", "SRI LANKA", "Spain", "US","US"),
Location.Name = c("Lima", "DF", "Habana", "Island", "Madrid","Maine","Los Angeles"),
Date=c("1950-01-01","2000-01-01","2000-01-01","2000-01-01","1999-01-04","1966-06-02","1950-05-01"),
Latitude = c(31.1,38,35.683,34.1,36.4,31.5,35.5),
Longitude = c(35.5,58.2,35.8,43.2,25.4,35.3,25.5),
Deaths = c(7,1,2,8,33,20,3),
Mag=c(7,7,6,5,6,6,7),
stringsAsFactors = F)
table_example <- dplyr::select(table_original,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table_example$Date[1]))
})
class(table_example$Date[1])
lubridate::as_date(c("1950-01-01","2000-01-01","2000-01-01","2000-01-01","1999-01-04","1966-06-02","1950-05-01"))
table_original <- data.frame(Country = c("Peru", "Mexico", "CUBA", "SRI LANKA", "Spain", "US","US"),
Location.Name = c("Lima", "DF", "Habana", "Island", "Madrid","Maine","Los Angeles"),
Date=lubridate::as_date(c("1950-01-01","2000-01-01","2000-01-01","2000-01-01","1999-01-04","1966-06-02","1950-05-01")),
Latitude = c(31.1,38,35.683,34.1,36.4,31.5,35.5),
Longitude = c(35.5,58.2,35.8,43.2,25.4,35.3,25.5),
Deaths = c(7,1,2,8,33,20,3),
Mag=c(7,7,6,5,6,6,7),
stringsAsFactors = F)
table_example <- dplyr::select(table_original,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table_example$Date[1]))
test_that("check date format", {
#setwd("C:/Users/emili/Documents/JHU Advanced R Programing/Capstone Project/MSDProjectS/vignettes/data")
#path <- "earthquakes-2021-05-02_07-20-17_-0400.tsv"
#table_original <- utils::read.table(file = path,sep = '\t', header = TRUE)
#table <-eq_clean_data(table_original)
#table_example <- dplyr::filter(table, lubridate::year(Date) > 2000,
#                               Country %in% c("CHINA","JAPAN"))
#table_example <- dplyr::select(table,Date,Country,Mag,Deaths,Location.Name)
table_original <- data.frame(Country = c("Peru", "Mexico", "CUBA", "SRI LANKA", "Spain", "US","US"),
Location.Name = c("Lima", "DF", "Habana", "Island", "Madrid","Maine","Los Angeles"),
Date=lubridate::as_date(c("1950-01-01","2000-01-01","2000-01-01","2000-01-01","1999-01-04","1966-06-02","1950-05-01")),
Latitude = c(31.1,38,35.683,34.1,36.4,31.5,35.5),
Longitude = c(35.5,58.2,35.8,43.2,25.4,35.3,25.5),
Deaths = c(7,1,2,8,33,20,3),
Mag=c(7,7,6,5,6,6,7),
stringsAsFactors = F)
table_example <- dplyr::select(table_original,Date,Country,Mag,Deaths,Location.Name)
ggplot2::ggplot(table_example) +
ggplot2::layer(geom = GeomTimeline,
mapping = ggplot2::aes(x = Date,
y = Country,
size = Mag,
color = Deaths),
data = table_example,
stat = 'identity',
position = 'identity',
show.legend = NA,
inherit.aes = TRUE,
params = list(na.rm = FALSE))
expect_equal("Date", class(table_example$Date[1]))
})
library(MSDCProjectS)
devtools::check_win_devel()
library(usethis)
use_travis()
